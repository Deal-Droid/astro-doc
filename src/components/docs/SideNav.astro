---
import { getCollection } from "astro:content";
import type { DocEntry } from "@/types"; // Adjust the path according to your project structure
import { Fragment } from "react";

// Fetch the collection with type
const docs: DocEntry[] = await getCollection("docs");

// Function to build nested menu structure
const buildMenu = (
  items: DocEntry[]
): { title: string; slug: string; children: any[] }[] => {
  const menu: { title: string; slug: string; children: any[] }[] = [];

  items.forEach((item) => {
    const parts = item.slug.split("/"); // Split slug into parts
    let currentLevel = menu;

    // Traverse the menu structure based on folder depth
    parts.forEach((part, index) => {
      let existingItem = currentLevel.find((i) => i.title === part);

      if (!existingItem) {
        existingItem = {
          title: part,
          slug: parts.slice(0, index + 1).join("/"),
          children: [],
        };
        currentLevel.push(existingItem);
      } else {
        // Update slug if necessary
        existingItem.slug = parts.slice(0, index + 1).join("/");
      }

      currentLevel = existingItem.children;
    });
  });

  return menu;
};

// Build the nested menu
const menu = buildMenu(docs);
---

<nav>
  <ul>
    {
      menu.map((item) => (
        <li>
          <a href={`/docs/${item.slug}`}>{item.title}</a>
          {item.children.length > 0 && (
            <ul>
              {item.children.map((subItem) => (
                <li>
                  <a href={`/docs/${subItem.slug}`}>{subItem.title}</a>
                </li>
              ))}
            </ul>
          )}
        </li>
      ))
    }
  </ul>
</nav>
