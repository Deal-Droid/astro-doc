---
import { type CollectionEntry, getCollection } from "astro:content";
import DocsLayout from "@/layouts/DocsLayout.astro";
import type { GetStaticPaths } from "astro";

// export async function getStaticPaths() {
//   const docs = await getCollection("docs");
//   return docs.map((doc: { slug: any }) => ({
//     params: { slug: doc.slug },
//     props: doc,
//   }));
// }

// type Props = CollectionEntry<"docs">;
// const doc = Astro.props;
// const { data, id } = doc;
// const idAndData = { id, ...data };
// const { Content } = await doc.render();

export const getStaticPaths = (async () => {
  const docs = await getCollection("docs");
  const headings = await Promise.all(
    docs.map((entry) => entry.render().then((data) => data.headings))
  );

  const posts = docs.map((entry, index) => {
    return {
      params: { slug: entry.slug },
      props: { entry, headings: headings[index] },
    };
  });

  return posts;
}) satisfies GetStaticPaths;

const { entry, headings } = Astro.props;
const { Content } = await entry.render();
const idAndData = { headings, ...entry.data };
---

<DocsLayout {...idAndData}>
  <Content />
</DocsLayout>
