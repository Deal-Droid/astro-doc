---
import { NavMenu, SearchBox, HamNavMenu } from "@/components/Navbar";
import { ModeToggle } from "@/components/ModeToggle";
import { SITE } from "@/config";

const { class: className } = Astro.props;
---

<header
  class:list={["sticky top-0 z-50 w-full border-b bg-background", className]}
>
  <div
    class="container flex h-20 space-x-4 justify-between items-center md:justify-center md:items-center md:space-x-0 md:gap-52"
  >
    <div class="">
      <a href={SITE.website}><h3>{SITE.title}</h3></a>
    </div>
    <div class="hidden md:block">
      <NavMenu client:only="react" />
    </div>
    <div class="md:hidden flex flex-row-reverse gap-4">
      <HamNavMenu client:only="react" />
      <ModeToggle client:load transition:persist />
    </div>
    <div class="flex-row gap-4 justify-end hidden md:flex">
      <!-- <SearchBox client:idle /> -->
      <ModeToggle client:load transition:persist />
    </div>
  </div>
</header>

<script is:inline>
  function setDarkMode(document) {
    const getThemePreference = () => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "theme-light";
    };
    const isDark = getThemePreference() === "dark";
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");

    if (typeof localStorage !== "undefined") {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "theme-light");
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      });
    }
  }

  setDarkMode(document);

  document.addEventListener("astro:before-swap", (ev) => {
    // Pass the incoming document to set the theme on it
    setDarkMode(ev.newDocument);
  });
</script>
